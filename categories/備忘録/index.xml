<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>備忘録 on ssk.dev 技術ブログ</title><link>https://sskdev.jp/categories/%E5%82%99%E5%BF%98%E9%8C%B2/</link><description>Recent content in 備忘録 on ssk.dev 技術ブログ</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://sskdev.jp/categories/%E5%82%99%E5%BF%98%E9%8C%B2/index.xml" rel="self" type="application/rss+xml"/><item><title>SwiftのSendableとは何ですか？</title><link>https://sskdev.jp/p/20241104/</link><pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate><guid>https://sskdev.jp/p/20241104/</guid><description>&lt;p>Swift の Sendable は、簡単に言うと「安全にスレッド間でやりとりできる型」を示すプロトコルです。マルチスレッドプログラム、つまり複数のスレッドが同時に動作するプログラムで使うときに役立ちます。&lt;/p>
&lt;h2 id="なぜ-sendable-が必要なのか">なぜ Sendable が必要なのか？
&lt;/h2>&lt;p>Swift は UI を扱うこともあり、マルチスレッドを強く意識しなければなりません。
マルチスレッドでのプログラミングでは、複数のスレッドが同時に同じデータにアクセスして操作することで、予期しないバグやエラーが発生することがあります。こういったバグを避けるために「このデータはスレッド間で安全に扱える」と明示する仕組みが必要です。これが Sendable の役割です。&lt;/p>
&lt;h2 id="具体的にはどういうこと">具体的にはどういうこと？
&lt;/h2>&lt;p>Sendable を使うと、Swift が「この型はスレッド間で安全に送れる」と判断してくれます。たとえば、Int や String のような基本型はスレッド間で安全にやりとりできますが、複雑なデータ構造や、スレッドセーフでない型はそうとは限りません。Sendable を型に適用することで、その型がスレッドセーフかどうかをコンパイラがチェックしてくれるようになります。&lt;/p>
&lt;p>Sendable は基本的にマーカープロトコルのため、それ自体が何かするということはありません。ただ、安全に送信できることを示すものです。&lt;/p>
&lt;h2 id="sendable-の使い方">Sendable の使い方
&lt;/h2>&lt;p>具体的には、独自の型を作成するときに、その型が Sendable を満たしているかを宣言できます。たとえば以下のように使います。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">struct&lt;/span> &lt;span class="nc">Data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Sendable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">let&lt;/span> &lt;span class="nv">value&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上記のコードでは、MyData が Sendable プロトコルに準拠しているため、この型のインスタンスはスレッド間で安全にやりとりできます。&lt;/p>
&lt;p>Swift で struct が Sendable プロトコルに準拠するためには、以下の条件を満たす必要があります。&lt;/p>
&lt;h3 id="sendable-に準拠している例">Sendable に準拠している例
&lt;/h3>&lt;h4 id="sendable-な-struct-の例">Sendable な struct の例
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">struct&lt;/span> &lt;span class="nc">UserProfile&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Sendable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Int&lt;/span> &lt;span class="c1">// IntはSendable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">String&lt;/span> &lt;span class="c1">// StringもSendable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nv">isActive&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Bool&lt;/span> &lt;span class="c1">// BoolもSendable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>この UserProfile 構造体は、全てのプロパティが Sendable 準拠の型なので、Sendable に自動で準拠しています。&lt;/p>
&lt;h4 id="sendable-な-class-の例">Sendable な class の例
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">final&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">UserSettings&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Sendable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">let&lt;/span> &lt;span class="nv">theme&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">String&lt;/span>         &lt;span class="c1">// StringはSendable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">let&lt;/span> &lt;span class="nv">notificationsEnabled&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Bool&lt;/span>  &lt;span class="c1">// BoolもSendable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">String&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">notificationsEnabled&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Bool&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="kc">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">theme&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">theme&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="kc">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">notificationsEnabled&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">notificationsEnabled&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="sendable-ではない-struct-の例">Sendable ではない struct の例
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">struct&lt;/span> &lt;span class="nc">NonSendableStruct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">var&lt;/span> &lt;span class="nv">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">var&lt;/span> &lt;span class="nv">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Any&lt;/span>&lt;span class="p">]&lt;/span>  &lt;span class="c1">// AnyはSendableではない&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">NonSendableClass&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">var&lt;/span> &lt;span class="nv">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>      &lt;span class="c1">// varで可変プロパティ&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">var&lt;/span> &lt;span class="nv">closure&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">(()&lt;/span> &lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="nb">Void&lt;/span>&lt;span class="p">)?&lt;/span>  &lt;span class="c1">// クロージャもSendableではない&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">func&lt;/span> &lt;span class="nf">increment&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="bp">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>この NonSendableClass は、Sendable に準拠できません。理由は以下のとおりです：&lt;/p>
&lt;p>• count が var で宣言されているため、状態が変更される可能性があります。
• closure プロパティがクロージャ型で、これはスレッドセーフでない可能性があるためです。&lt;/p>
&lt;h3 id="unchecked-sendable-を使った例">@unchecked Sendable を使った例
&lt;/h3>&lt;p>一部のプロパティがスレッドセーフでない場合や、スレッドセーフであることを自己責任で保証できる場合には、@unchecked Sendable を使うことができます。&lt;/p>
&lt;h4 id="unchecked-sendable-を使用した-struct-の例">@unchecked Sendable を使用した struct の例
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">struct&lt;/span> &lt;span class="nc">MyStruct&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">@&lt;/span>&lt;span class="n">unchecked&lt;/span> &lt;span class="n">Sendable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">var&lt;/span> &lt;span class="nv">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">String&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">var&lt;/span> &lt;span class="nv">cache&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Any&lt;/span>&lt;span class="p">]&lt;/span>   &lt;span class="c1">// AnyはSendableではないが、スレッドセーフを保証したい&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>ここで、cache プロパティに Any 型を使っていますが、@unchecked Sendable を使うことで Sendable として扱えるようになります。ただし、この場合はスレッドセーフを保証する責任がプログラマ側にあるため、慎重に設計する必要があります。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-swift" data-lang="swift">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">final&lt;/span> &lt;span class="kd">class&lt;/span> &lt;span class="nc">MyClass&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">@&lt;/span>&lt;span class="n">unchecked&lt;/span> &lt;span class="n">Sendable&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">var&lt;/span> &lt;span class="nv">count&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">Int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">var&lt;/span> &lt;span class="nv">settings&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">String&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="kd">func&lt;/span> &lt;span class="nf">updateCount&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        &lt;span class="bp">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>